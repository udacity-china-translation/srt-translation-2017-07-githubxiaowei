1
00:00:00,310 --> 00:00:04,050
正确答案是前两个句子可以

2
00:00:04,050 --> 00:00:06,720
而第三个不行

3
00:00:06,720 --> 00:00:08,470
判断的方法是匹配规则

4
00:00:08,470 --> 00:00:11,790
如果你从句式开始 好吧 我们只有一个句式的规则

5
00:00:11,790 --> 00:00:13,710
所以我们必须采用主语 动词 宾语的结构

6
00:00:13,710 --> 00:00:16,270
主语的规则也只有一个

7
00:00:16,270 --> 00:00:18,830
宾语的规则同样也是一个 所以我们要采用

8
00:00:18,830 --> 00:00:25,590
名词 动词 后接可以使用名词做替换的宾语的结构

9
00:00:25,590 --> 00:00:28,300
这里我们的选择很多

10
00:00:28,300 --> 00:00:31,460
所以我们可以用 Python 替换名词

11
00:00:31,460 --> 00:00:34,050
可以用 eat 替换动词

12
00:00:34,050 --> 00:00:37,290
用 cookie 替换第二个名词

13
00:00:37,290 --> 00:00:40,630
这样就得到了第一个句子

14
00:00:40,630 --> 00:00:45,470
第二种选择可以用 Python 替换第二个名词

15
00:00:45,470 --> 00:00:48,300
这样就得到了第二个句子

16
00:00:48,300 --> 00:00:50,810
不可能得到第三个句子 我们来仔细分析一下

17
00:00:50,810 --> 00:00:54,550
名词可以替换成 I 这符合规则

18
00:00:54,550 --> 00:00:57,790
动词可以替换成 like 这也符合规则

19
00:00:57,790 --> 00:00:59,850
但是名词却不能替换成 eat 

20
00:00:59,850 --> 00:01:02,950
名词可以是 I Python 或者 cookie 之一

21
00:01:02,950 --> 00:01:05,990
这就是不能得到第三个句子的原因

22
00:01:05,990 --> 00:01:09,970
替换语法的重要之处在于我们可以使用它描述一种大型语言

23
00:01:09,970 --> 00:01:13,030
事实上 一个小型的规则集就可以描述一种无限大的语言

24
00:01:13,030 --> 00:01:15,820
这种语言本身非常小 但是我们很快就会看到

25
00:01:15,820 --> 00:01:18,810
如何仍然使用少量规则描述更大型的语言

26
00:01:18,810 --> 00:01:21,070
并且做到非常精确

27
00:01:21,070 --> 00:01:23,060
仅仅根据这些规则进行替换 

28
00:01:23,060 --> 00:01:26,600
我们可以准确地推断出什么样的句子属于这种语言
