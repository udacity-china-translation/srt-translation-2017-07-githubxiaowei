1
00:00:00,420 --> 00:00:03,810
第一种情况 你通过 A/B 测试

2
00:00:03,810 --> 00:00:06,160
无法确认是否提供了用户需要的所有产品

3
00:00:06,160 --> 00:00:10,070
你可以尝试提供额外的产品 但是如果用户不购买

4
00:00:10,070 --> 00:00:13,710
你仍然无法知道是否缺少（ 用户需要的 ）其他产品

5
00:00:13,710 --> 00:00:16,860
因此 你可能想要询问用户

6
00:00:16,860 --> 00:00:18,200
他们是否觉得缺少什么东西

7
00:00:18,200 --> 00:00:21,310
第二种情况 使用 A/B 测试无法全面测试

8
00:00:21,310 --> 00:00:24,590
提供增值服务是否是好的商业决策

9
00:00:24,590 --> 00:00:26,930
用户需要主动选择增值服务

10
00:00:26,930 --> 00:00:31,295
而随机把人员分配到这一组或那一组 是不可行的

11
00:00:31,295 --> 00:00:33,635
你没有可用于比较的对照组

12
00:00:33,635 --> 00:00:37,185
你仍然可以从 A/B 测试中获得有价值的信息

13
00:00:37,185 --> 00:00:37,825
例如

14
00:00:37,825 --> 00:00:40,785
你可以看到多少用户会主动了解额外的功能 或

15
00:00:40,785 --> 00:00:43,715
如果提供选择 多少用户会选择升级

16
00:00:43,715 --> 00:00:46,185
但是你无法全面测试出发生的变化

17
00:00:46,185 --> 00:00:49,149
第三种情况是使用 A/B 测试的主要情形

18
00:00:49,149 --> 00:00:52,860
有明确的对照组和实验组

19
00:00:52,860 --> 00:00:54,070
旧算法和新算法

20
00:00:54,070 --> 00:00:57,080
也可以找到一些能够评估改变的明确的指标

21
00:00:57,080 --> 00:01:01,290
比如用户点击推荐的概率或者

22
00:01:01,290 --> 00:01:02,800
实际观看影片的概率

23
00:01:02,800 --> 00:01:05,860
第四种情况的测试有点复杂 取决于你是否拥有

24
00:01:05,860 --> 00:01:09,340
同时运行两个版本的后台的计算能力

25
00:01:09,340 --> 00:01:12,940
如果同时运行两个版本 你当然可以对变化的结果进行 A/B 测试

26
00:01:12,940 --> 00:01:14,530
再者 你拥有明确的对照组和实验组

27
00:01:14,530 --> 00:01:17,340
因为这两组十分具有可比性

28
00:01:17,340 --> 00:01:19,230
因此 只要你拥有计算能力

29
00:01:19,230 --> 00:01:21,020
同时运行两个版本 你会十分容易完成测试
